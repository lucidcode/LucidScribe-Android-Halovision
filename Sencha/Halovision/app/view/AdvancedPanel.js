/*
 * File: app/view/AdvancedPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Halovision.view.AdvancedPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.AdvancedPanel',

    config: {
        title: 'Advanced',
        id: 'AdvancedPanel',
        layout: {
            type: 'vbox'
        },
        scrollable: 'vertical',
        items: [
            {
                xtype: 'fieldset',
                items: [
                    {
                        xtype: 'checkboxfield',
                        html: '<font size=2>Adds highlight color options.</font>',
                        itemId: 'ColorsField',
                        label: 'Colors',
                        name: 'Colors',
                        hidden: true
                    },
                    {
                        xtype: 'checkboxfield',
                        html: '<font size=2>Calls the "Lucid Scribe Trigger" task in the Tasker app.</font>',
                        itemId: 'TaskerField',
                        label: 'Tasker',
                        name: 'Effects'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                layout: {
                    pack: 'justify',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        id: 'WatchButton2',
                        itemId: 'mybutton',
                        iconCls: 'time',
                        text: 'Monitor'
                    },
                    {
                        xtype: 'button',
                        hidden: true,
                        id: 'ConsumeButton',
                        itemId: 'mybutton1',
                        iconCls: 'time',
                        text: 'Consume'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onColorsFieldChange',
                event: 'change',
                delegate: '#ColorsField'
            },
            {
                fn: 'onTaskerFieldChange',
                event: 'change',
                delegate: '#TaskerField'
            },
            {
                fn: 'onWatchButtonTap1',
                event: 'tap',
                delegate: '#WatchButton2'
            },
            {
                fn: 'onWatchButtonTap11',
                event: 'tap',
                delegate: '#ConsumeButton'
            }
        ]
    },

    onColorsFieldChange: function(checkboxfield, newValue, oldValue, eOpts) {
        if (newValue === true)
        {
            Halovision.app.getController("MainController").Purchase("Colors");
        }
        if (newValue === false)
        {
            // Reload the settings  
            Halovision.app.getController('MainController').LoadingAdvanced = 1;
            var advancedPanel = Halovision.app.getController('MainController').getAdvancedPanel();
            advancedPanel.setRecord(Halovision.app.getController('MainController').LoadAdvanced());
            Halovision.app.getController('MainController').LoadingAdvanced = 0;

            Ext.Msg.alert('Already Purchased!', "Thanks again for your contribution to the search for lucidity.", Ext.emptyFn);
        }
    },

    onTaskerFieldChange: function(checkboxfield, newValue, oldValue, eOpts) {
        if (Halovision.app.getController('MainController').LoadingAdvanced === 1)
        {
            console.log('not saving advanced');
            return;
        }

        console.log('Saving advanced');

        var advancedPanel = Halovision.app.getController('MainController').getAdvancedPanel();
        var settings = advancedPanel.getRecord();

        //Check to see if record set on form, if not then exit
        if (settings === null) {
            console.log('could not find advanced - aborting');
            return;
        }

        //Now grab values from the form and save them
        var newValues = advancedPanel.getValues();

        // Update the current note's fields with form values.
        settings.set('Effects', newValue);

        var errors = settings.validate();
        if (!errors.isValid()) {
            Ext.Msg.alert('Save Settings Error!',errors.getByField('title')[0].getMessage(), Ext.emptyFn);
            settings.reject();
            return; 
        }

        var store = Ext.getStore('AdvancedStore');

        store.sync();
    },

    onWatchButtonTap1: function(button, e, eOpts) {
        Halovision.app.getController("MainController").Watch();
    },

    onWatchButtonTap11: function(button, e, eOpts) {
        Halovision.app.getController("MainController").Consume();
    }

});