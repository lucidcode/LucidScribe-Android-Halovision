{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "LoadingAdvanced": "0",
        "LoadingSettings": "0",
        "designer|userClassName": "MainController"
    },
    "designerId": "d198bf23-79e1-4d37-b193-a6bbb2ca8842",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "DataID",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "LoadingAdvanced",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "LoadingSettings",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "AdvancedPanel",
                "selector": "AdvancedPanel",
                "xtype": "AdvancedPanel"
            },
            "designerId": "5e527ffd-67a4-4511-be82-127380039f52"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "CurrentPanel",
                "selector": "CurrentPanel",
                "xtype": "CurrentPanel"
            },
            "designerId": "652ba626-0b87-439b-ab58-decd9fb8acbb"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "MainPanel",
                "selector": "MainPanel",
                "xtype": "MainPanel"
            },
            "designerId": "104ee712-6dd8-4c12-b8d3-01c900a71895"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "SettingsPanel",
                "selector": "SettingsPanel",
                "xtype": "SettingsPanel"
            },
            "designerId": "ab15012f-de23-443a-a290-d37f2aae26f7"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "console.log('Launching Main Controller');\r",
                    "\r",
                    "Halovision.app.AccelerometerData = [];\r",
                    "Halovision.app.DataID = 1;\r",
                    "\r",
                    "for (i = 1; i < 128; i++) {\r",
                    "    Halovision.app.AccelerometerData.push({\r",
                    "        'id': Halovision.app.DataID,\r",
                    "        'x': 0\r",
                    "    });\r",
                    "    Halovision.app.DataID++;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "// Load the settings\r",
                    "var task0 = Ext.create('Ext.util.DelayedTask', function() {    \r",
                    "    this.LoadSettings();\r",
                    "}, this);\r",
                    "task0.delay(1024);\r",
                    "\r",
                    "// Load the audio tracks\r",
                    "var task = Ext.create('Ext.util.DelayedTask', function() {    \r",
                    "    this.LoadAudioTracks();\r",
                    "}, this);\r",
                    "task.delay(1024);\r",
                    "\r",
                    "// Load the free color\r",
                    "var task2 = Ext.create('Ext.util.DelayedTask', function() {    \r",
                    "    this.LoadFreeColors();\r",
                    "}, this);\r",
                    "task2.delay(1024);\r",
                    "\r",
                    "// Load the free algorithms\r",
                    "var task3 = Ext.create('Ext.util.DelayedTask', function() {    \r",
                    "    this.LoadFreeAlgorithms();\r",
                    "}, this);\r",
                    "task3.delay(1024);\r",
                    "\r",
                    "// Get the purchases from the store\r",
                    "var task4 = Ext.create('Ext.util.DelayedTask', function() {    \r",
                    "    this.GetPurchases();\r",
                    "}, this);\r",
                    "task4.delay(1024);\r",
                    "\r",
                    "// Show the main screen\r",
                    "var currentPanel = Halovision.app.getController('MainController').getCurrentPanel();\r",
                    "this.getMainPanel().getComponent(\"NavigationView\").push(currentPanel);\r",
                    "\r",
                    "var accelerometerStore = Ext.getStore('AccelerometerStore');\r",
                    "accelerometerStore.setData(Halovision.app.AccelerometerData);"
                ]
            },
            "designerId": "6a2493a8-f0d4-4bda-9bd8-9d723cb7e5a0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "Watch",
                "implHandler": [
                    "console.log('Launching Watcher');\r",
                    "\r",
                    "// Get the settings\r",
                    "var settingsStore = Ext.getStore('SettingsStore');\r",
                    "settings = settingsStore.first();\r",
                    "\r",
                    "// Get the advanced settings\r",
                    "var advancedStore = Ext.getStore('AdvancedStore');\r",
                    "advanced = advancedStore.first();\r",
                    "\r",
                    "var track = settings.get('Track');\r",
                    "if (advanced.get('Effects'))\r",
                    "{\r",
                    "    track = \"Lucid Scribe Trigger\";\r",
                    "}\r",
                    "\r",
                    "cordova.exec(\r",
                    "function SuccessHandler (result) {        \r",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {  \r",
                    "\r",
                    "        var accelerometerStore = Ext.getStore('AccelerometerStore');\r",
                    "\r",
                    "        Halovision.app.DataID += 1;\r",
                    "        Halovision.app.AccelerometerData.push({\r",
                    "            'id': Halovision.app.DataID,\r",
                    "            'x': result.x\r",
                    "        });\r",
                    "\r",
                    "        if (Halovision.app.AccelerometerData.length >= 128)\r",
                    "        {\r",
                    "            Halovision.app.AccelerometerData.shift();\r",
                    "        }\r",
                    "\r",
                    "        accelerometerStore.setData(Halovision.app.AccelerometerData);\r",
                    "\r",
                    "    }, this);\r",
                    "    task.delay(1);\r",
                    "\r",
                    "\r",
                    "},  \r",
                    "function ErrorHandler (error) { \r",
                    "    alert(\"Native call failed: \" + error);\r",
                    "},\r",
                    "'HaloVisionPlugin', '', [settings.get('Algorithm'), settings.get('Amplification'), settings.get('PixelThreshold'), settings.get('PixelsInARow'), settings.get('FrameThreshold'), settings.get('Color'), track, settings.get('Researcher'), settings.get('Fullscreen')]);"
                ]
            },
            "designerId": "1f6e3612-7082-4a2b-990b-99a5114e0c8a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "ShowSettings",
                "implHandler": [
                    "console.log('Launching Settings');\r",
                    "\r",
                    "// Load the settings  \r",
                    "Halovision.app.getController('MainController').LoadingSettings = 1;\r",
                    "var settingsPanel = Halovision.app.getController('MainController').getSettingsPanel();\r",
                    "settingsPanel.setRecord(this.LoadSettings());\r",
                    "\r",
                    "// Show the settings screen\r",
                    "this.getMainPanel().getComponent(\"NavigationView\").push(settingsPanel);\r",
                    "Halovision.app.getController('MainController').LoadingSettings = 0;"
                ]
            },
            "designerId": "b8a1101e-5f23-42f0-8415-4ba2de5a8aa1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "ShowAdvanced",
                "implHandler": [
                    "console.log('Launching Advanced Settings');\r",
                    "\r",
                    "// Load the settings  \r",
                    "Halovision.app.getController('MainController').LoadingAdvanced = 1;\r",
                    "var advancedPanel = Halovision.app.getController('MainController').getAdvancedPanel();\r",
                    "advancedPanel.setRecord(this.LoadAdvanced());\r",
                    "\r",
                    "// Show the settings screen\r",
                    "this.getMainPanel().getComponent(\"NavigationView\").push(advancedPanel);\r",
                    "Halovision.app.getController('MainController').LoadingAdvanced = 0;"
                ]
            },
            "designerId": "3757e17b-d0a2-4025-b121-11e0f86fb42f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadSettings",
                "implHandler": [
                    "console.log('Loading settings');\r",
                    "\r",
                    "var settings = Ext.create('Halovision.model.SettingsModel', {\r",
                    "    Researcher: 'anonymous',\r",
                    "    Track: 'Prodigy - Voodoo People',\r",
                    "    Color: 'White',\r",
                    "    Effect: 'Pixelate',\r",
                    "    Algorithm: 'Motion Detector',\r",
                    "    Fullscreen: true,\r",
                    "    Amplification: 32,\r",
                    "    PixelThreshold: 16,\r",
                    "    PixelsInARow: 4,\r",
                    "    FrameThreshold: 600\r",
                    "});\r",
                    "\r",
                    "try {\r",
                    "\r",
                    "    // Grab settings from store and if not avail then create new one\r",
                    "    var settingsStore = Ext.getStore('SettingsStore');\r",
                    "\r",
                    "    // If nothing in store then add initial values\r",
                    "    if (settingsStore.first() === undefined)\r",
                    "    {\r",
                    "        console.log('creating new settings record');\r",
                    "        settingsStore.add(settings);\r",
                    "        settingsStore.sync();\r",
                    "    }\r",
                    "    settings = settingsStore.first();\r",
                    "}\r",
                    "catch (ex)\r",
                    "{\r",
                    "    console.log('EXCEPTION: ' + ex.message);\r",
                    "}\r",
                    "\r",
                    "return settings;"
                ]
            },
            "designerId": "b16c7201-bb37-4f3f-b5b4-b41b4a421719"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadAdvanced",
                "implHandler": [
                    "console.log('Loading advanced settings');\r",
                    "\r",
                    "var advanced = Ext.create('Halovision.model.AdvancedModel', {\r",
                    "    Colors: 0,\r",
                    "    Tracks: 0,\r",
                    "    Effects: 0,\r",
                    "    Logs: 0,\r",
                    "    Exports: 0\r",
                    "});\r",
                    "\r",
                    "try {\r",
                    "\r",
                    "    // Grab settings from store and if not avail then create new one\r",
                    "    var advancedStore = Ext.getStore('AdvancedStore');\r",
                    "\r",
                    "    // If nothing in store then add initial values\r",
                    "    if (advancedStore.first() === undefined)\r",
                    "    {\r",
                    "        console.log('creating new settings record');\r",
                    "        advancedStore.add(advanced);\r",
                    "        advancedStore.sync();\r",
                    "    }\r",
                    "    advanced = advancedStore.first();\r",
                    "}\r",
                    "catch (ex)\r",
                    "{\r",
                    "    console.log('EXCEPTION: ' + ex.message);\r",
                    "}\r",
                    "\r",
                    "return advanced;"
                ]
            },
            "designerId": "0f5d7d72-344c-42c0-a6c9-af76b41eb52b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadAudioTracks",
                "implHandler": [
                    "console.log('Loading audio tracks');\r",
                    "\r",
                    "try {\r",
                    "\r",
                    "    // Grab settings from store and if not avail then create new one\r",
                    "    var audioStore = Ext.getStore('AudioTrackStore');\r",
                    "\r",
                    "    // If nothing in store then add initial values\r",
                    "    if (audioStore.first() === undefined)\r",
                    "    {\r",
                    "        console.log('creating new audio records');\r",
                    "\r",
                    "        audioStore.add(Ext.create('Halovision.model.AudioTrackModel', {\r",
                    "            Track: 'Astral Projection - People Can Fly',\r",
                    "        Path: 'Astral Projection - People Can Fly.mp3'}));\r",
                    "\r",
                    "        audioStore.add(Ext.create('Halovision.model.AudioTrackModel', {\r",
                    "            Track: 'DT8 Project – Breathe',\r",
                    "        Path: 'DT8 Project – Breathe.mp3'}));\r",
                    "\r",
                    "        audioStore.add(Ext.create('Halovision.model.AudioTrackModel', {\r",
                    "            Track: 'Lange - Follow Me',\r",
                    "        Path: 'Lange - Follow Me.mp3'}));\r",
                    "\r",
                    "        audioStore.add(Ext.create('Halovision.model.AudioTrackModel', {\r",
                    "            Track: 'Kai Tracid - Trance And Acid',\r",
                    "        Path: 'Kai Tracid - Trance And Acid.mp3'}));\r",
                    "\r",
                    "        audioStore.add(Ext.create('Halovision.model.AudioTrackModel', {\r",
                    "            Track: 'Prodigy - Voodoo People',\r",
                    "        Path: 'Prodigy - Voodoo People.mp3'}));\r",
                    "\r",
                    "        audioStore.sync();\r",
                    "    }\r",
                    "}\r",
                    "catch (ex)\r",
                    "{\r",
                    "    console.log('EXCEPTION: ' + ex.message);\r",
                    "}"
                ]
            },
            "designerId": "c4b4ecc5-59a2-42aa-888d-2daa31defc52"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadFreeColors",
                "implHandler": [
                    "console.log('Loading color store');\r",
                    "\r",
                    "try {\r",
                    "\r",
                    "    // Grab settings from store and if not avail then create new one\r",
                    "    var colorStore = Ext.getStore('ColorStore');\r",
                    "\r",
                    "    // If nothing in store then add initial values\r",
                    "    if (colorStore.first() === undefined)\r",
                    "    {\r",
                    "        console.log('Creating color store');\r",
                    "        colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'White'}));\r",
                    "        colorStore.sync();\r",
                    "    }\r",
                    "}\r",
                    "catch (ex)\r",
                    "{\r",
                    "    console.log('EXCEPTION: ' + ex.message);\r",
                    "}"
                ]
            },
            "designerId": "a15be76f-f9e0-48f9-af7c-452fac9c1aaa"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadPurchasedColors",
                "implHandler": [
                    "// Grab settings from store and if not avail then create new one\r",
                    "var colorStore = Ext.getStore('ColorStore');\r",
                    "if (colorStore.getCount() == 1)\r",
                    "{\r",
                    "    console.log('Adding colors');\r",
                    "\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'AliceBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'AntiqueWhite'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Aqua'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Aquamarine'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Azure'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Beige'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Bisque'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Black'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'BlanchedAlmond'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Blue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'BlueViolet'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Brown'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'BurlyWood'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'CadetBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Chartreuse'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Chocolate'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Coral'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'CornflowerBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Cornsilk'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Crimson'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Cyan'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkCyan'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkGoldenrod'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkKhaki'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkMagenta'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkOliveGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkOrange'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkOrchid'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkRed'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkSalmon'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkSeaGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkSlateBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkSlateGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkTurquoise'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DarkViolet'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DeepPink'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DeepSkyBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DimGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'DodgerBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Firebrick'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'FloralWhite'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'ForestGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Fuchsia'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Gainsboro'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'GhostWhite'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Gold'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Goldenrod'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Gray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Green'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'GreenYellow'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Honeydew'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'HotPink'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'IndianRed'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Indigo'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Ivory'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Khaki'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Lavender'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LavenderBlush'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LawnGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LemonChiffon'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightCoral'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightCyan'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightGoldenrodYellow'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightPink'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightSalmon'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightSeaGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightSkyBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightSlateGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightSteelBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LightYellow'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Lime'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'LimeGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Linen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Magenta'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Maroon'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumAquamarine'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumOrchid'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumPurple'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumSeaGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumSlateBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumSpringGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumTurquoise'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MediumVioletRed'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MidnightBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MintCream'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'MistyRose'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Moccasin'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'NavajoWhite'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Navy'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'OldLace'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Olive'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'OliveDrab'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Orange'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'OrangeRed'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Orchid'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PaleGoldenrod'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PaleGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PaleTurquoise'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PaleVioletRed'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PapayaWhip'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PeachPuff'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Peru'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Pink'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Plum'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'PowderBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Purple'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Red'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'RosyBrown'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'RoyalBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SaddleBrown'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Salmon'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SandyBrown'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SeaGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SeaShell'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Sienna'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Silver'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SkyBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SlateBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SlateGray'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Snow'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SpringGreen'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'SteelBlue'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Tan'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Teal'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Thistle'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Tomato'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Turquoise'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Violet'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Wheat'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'WhiteSmoke'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'Yellow'}));\r",
                    "    colorStore.add(Ext.create('Halovision.model.ColorModel', {name: 'YellowGreen'}));\r",
                    "\r",
                    "    colorStore.sync();\r",
                    "}"
                ]
            },
            "designerId": "0b0ae924-f213-4bf6-b09f-5b9daa5f19af"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "LoadFreeAlgorithms",
                "implHandler": [
                    "console.log('Loading algorithm store');\r",
                    "\r",
                    "try {\r",
                    "\r",
                    "    // Grab settings from store and if not avail then create new one\r",
                    "    var algorithmStore = Ext.getStore('AlgorithmStore');\r",
                    "\r",
                    "    // If nothing in store then add initial values\r",
                    "    if (algorithmStore.first() === undefined)\r",
                    "    {\r",
                    "        console.log('Creating algorithm store');\r",
                    "        algorithmStore.add(Ext.create('Halovision.model.AlgorithmModel', {name: 'REM Detector'}));\r",
                    "        algorithmStore.add(Ext.create('Halovision.model.AlgorithmModel', {name: 'Motion Detector'}));\r",
                    "        algorithmStore.sync();\r",
                    "    }\r",
                    "}\r",
                    "catch (ex)\r",
                    "{\r",
                    "    console.log('EXCEPTION: ' + ex.message);\r",
                    "}"
                ]
            },
            "designerId": "76748342-9f05-45bc-8e93-ed452931e14b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "SaveSettings",
                "implHandler": [
                    "if (Halovision.app.getController('MainController').LoadingSettings === 1)\r",
                    "{\r",
                    "    console.log('not saving settings');\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "console.log('Saving settings');\r",
                    "\r",
                    "var settingsPanel = Halovision.app.getController('MainController').getSettingsPanel();\r",
                    "var settings = settingsPanel.getRecord();\r",
                    "\r",
                    "//Check to see if record set on form, if not then exit\r",
                    "if (settings === null) {\r",
                    "    console.log('could not find settings - aborting');\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "//Now grab values from the form and save them\r",
                    "var newValues = settingsPanel.getValues();\r",
                    "\r",
                    "// Update the current note's fields with form values.\r",
                    "settings.set('Researcher', newValues.Researcher);\r",
                    "settings.set('Track', newValues.Track);\r",
                    "settings.set('Color', newValues.Color);\r",
                    "settings.set('Algorithm', newValues.Algorithm);\r",
                    "settings.set('Fullscreen', newValues.Fullscreen);\r",
                    "settings.set('PixelThreshold', newValues.PixelThreshold);\r",
                    "settings.set('FrameThreshold', newValues.FrameThreshold);\r",
                    "\r",
                    "var errors = settings.validate();\r",
                    "if (!errors.isValid()) {\r",
                    "    Ext.Msg.alert('Save Settings Error!',errors.getByField('title')[0].getMessage(), Ext.emptyFn);\r",
                    "    settings.reject();\r",
                    "    return; \r",
                    "}\r",
                    "\r",
                    "var store = Ext.getStore('SettingsStore');\r",
                    "\r",
                    "store.sync();"
                ]
            },
            "designerId": "72801771-a8c0-4700-808c-ba7858cf6aa0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "GetPurchases",
                "implHandler": [
                    "console.log('Getting Purchases');\r",
                    "\r",
                    "cordova.exec(\r",
                    "function SuccessHandler (result) {        \r",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {\r",
                    "\r",
                    "        if (result.Command === \"Purchases\")\r",
                    "        {\r",
                    "            var advanced = Ext.create('Halovision.model.AdvancedModel', {\r",
                    "                Colors: 0,\r",
                    "                Tracks: 0,\r",
                    "                Effects: 0,\r",
                    "                Logs: 0,\r",
                    "                Exports: 0\r",
                    "            });\r",
                    "\r",
                    "            // Grab settings from store and if not avail then create new one\r",
                    "            var advancedStore = Ext.getStore('AdvancedStore');\r",
                    "\r",
                    "            // If nothing in store then add initial values\r",
                    "            if (advancedStore.first() === undefined)\r",
                    "            {\r",
                    "                console.log('creating new settings record');\r",
                    "                advancedStore.add(advanced);\r",
                    "                advancedStore.sync();\r",
                    "            }\r",
                    "            advanced = advancedStore.first();\r",
                    "\r",
                    "            // Update the current fields with purchase values.\r",
                    "            advanced.set('Colors', result.Colors);\r",
                    "            if (result.Colors === 1)\r",
                    "            {\r",
                    "                Halovision.app.getController(\"MainController\").LoadPurchasedColors();\r",
                    "            }\r",
                    "            advancedStore.sync();\r",
                    "        }\r",
                    "\r",
                    "    }, this);\r",
                    "    task.delay(1);\r",
                    "\r",
                    "\r",
                    "},  \r",
                    "function ErrorHandler (error) { \r",
                    "    Ext.Msg.alert('Error!', error, Ext.emptyFn);\r",
                    "},\r",
                    "'LucidScribeStorePlugin', '', [\"GetPurchases\"]);"
                ]
            },
            "designerId": "3fd87817-3898-469c-a4c7-909f3da20bb7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "Purchase",
                "designer|params": [
                    "objectSKU"
                ],
                "implHandler": [
                    "if (Halovision.app.getController('MainController').LoadingAdvanced === 1)\r",
                    "{\r",
                    "    console.log('not purchasing');\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "console.log('Purchasing ' + objectSKU);\r",
                    "\r",
                    "cordova.exec(\r",
                    "function SuccessHandler (result) {  \r",
                    "    if (result.Command === \"NewPurchase\")\r",
                    "    {\r",
                    "        if (result.ObjectSKU === \"Colors\")\r",
                    "        {\r",
                    "            Halovision.app.getController(\"MainController\").PurchaseColors();\r",
                    "        }\r",
                    "        else if (result.ObjectSKU === \"User canceled\")\r",
                    "        {\r",
                    "            Halovision.app.getController(\"MainController\").getMainPanel().getComponent(\"NavigationView\").pop();\r",
                    "        }\r",
                    "    }\r",
                    "},  \r",
                    "function ErrorHandler (error) { \r",
                    "    Ext.Msg.alert('Error!', error, Ext.emptyFn);\r",
                    "    Halovision.app.getController(\"MainController\").getMainPanel().getComponent(\"NavigationView\").pop();\r",
                    "},\r",
                    "'LucidScribeStorePlugin', '', [\"Purchase\", objectSKU]);"
                ]
            },
            "designerId": "17730550-8b28-4806-835f-6c4539dd83ba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "PurchaseColors",
                "implHandler": [
                    "Halovision.app.getController(\"MainController\").LoadPurchasedColors();\r",
                    "\r",
                    "console.log('Saving advanced settings');\r",
                    "\r",
                    "var advanced = Ext.create('Halovision.model.AdvancedModel', {\r",
                    "    Colors: 0,\r",
                    "    Tracks: 0,\r",
                    "    Effects: 0,\r",
                    "    Logs: 0,\r",
                    "    Exports: 0\r",
                    "});\r",
                    "\r",
                    "// Grab settings from store and if not avail then create new one\r",
                    "var advancedStore = Ext.getStore('AdvancedStore');\r",
                    "\r",
                    "// If nothing in store then add initial values\r",
                    "if (advancedStore.first() === undefined)\r",
                    "{\r",
                    "    console.log('creating new settings record');\r",
                    "    advancedStore.add(advanced);\r",
                    "    advancedStore.sync();\r",
                    "}\r",
                    "advanced = advancedStore.first();\r",
                    "advanced.set('Colors', 1);\r",
                    "\r",
                    "advancedStore.sync();\r",
                    "Ext.Msg.alert('Colors Purchased!', \"Thank you for contributing to the search for lucidity.\", Ext.emptyFn);"
                ]
            },
            "designerId": "b375c986-8cea-4d45-8ce3-0c2c1eb4ecf7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "Consume",
                "implHandler": [
                    "cordova.exec(\r",
                    "function SuccessHandler (result) {        \r",
                    "    if (result.Command === \"Consume\")\r",
                    "    {\r",
                    "        Ext.Msg.alert('Consumed!', \"Colors\", Ext.emptyFn);\r",
                    "    }\r",
                    "},  \r",
                    "function ErrorHandler (error) { \r",
                    "    Ext.Msg.alert('Error!', error, Ext.emptyFn);\r",
                    "    Halovision.app.getController(\"MainController\").getMainPanel().getComponent(\"NavigationView\").pop();\r",
                    "},\r",
                    "'LucidScribeStorePlugin', '', [\"Consume\"]);"
                ]
            },
            "designerId": "406b3c8d-bc0d-4d74-899a-332740fe2846"
        }
    ]
}